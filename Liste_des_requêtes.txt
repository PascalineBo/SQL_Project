     
Calculer les indicateurs suivants :
- 1. Nombre de retour clients sur la livraison: 639
Requête:
            select count(*) as nombre_retours_livraison
            from retour_client
            where libelle_categorie = "livraison"
- 2. Quelle est la liste des notes des clients sur les réseaux sociaux sur les TVs?
8, 9 et 10.
Requête:
            select DISTINCT note
            from retour_client r
            left outer join produit p on r.cle_produit = p.cle_produit
            where r.libelle_source = "réseaux sociaux" AND p.titre_produit = 'TV'
- 3. Quelle est la note moyenne pour chaque catégorie de produits? (classé de la meilleure à la moins bonne)
Requête:
            select p.typologie_produit as categorie, 
            round(avg(r.note),2) as note_moyenne
            from retour_client r
            left outer join produit p on r.cle_produit = p.cle_produit
            group by categorie
            order by note_moyenne DESC


- 4. Quels sont les 5 magasins avec les meilleures notes moyennes?
Requête:
      select round(avg(r.note),2) as note_moyenne, 
      r.ref_magasin, m.libelle_de_commune
      from retour_client r
      left outer join magasin m on r.ref_magasin = m.ref_magasin
      group by r.ref_magasin
      ORDER BY note_moyenne DESC
      LIMIT 5
- 5. Quels sont les magasins qui ont plus de 12 feedbacks sur le drive?
      Requête:
select count(r.note) as nb_feedbacks,
r.libelle_categorie,
r.ref_magasin, m.libelle_de_commune as commune
from retour_client r
left outer join magasin m on r.ref_magasin = m.ref_magasin
group by commune, r.libelle_categorie
having r.libelle_categorie = 'drive' AND nb_feedbacks > 12
ORDER BY nb_feedbacks DESC

- 6. Quel est le classement des départements par note?
Requête:
select round(avg(r.note),2) as note_moyenne, m.departement as departement
from retour_client r
left outer join magasin m on r.ref_magasin = m.ref_magasin
group by departement
ORDER BY note_moyenne DESC

- 7. Quelle est la typologie de produit qui apporte le meilleur service après-vente?
Les Plantes aromatiques surgelées.
Requête:
       select p.titre_produit, 
       round(avg(r.note),2) as note_moyenne,
       max(r.libelle_categorie)as libelle_categorie
       from retour_client r
       left outer join produit p on r.cle_produit = p.cle_produit
       group by p.titre_produit
       having r.libelle_categorie= "service après-vente"
       order by note_moyenne DESC
      Limit 10


- 8. Quelle est la note moyenne sur l’ensemble des boissons?
Requête:
select round(avg(r.note),2) as note_moyenne_boissons
from retour_client r
left outer join produit p on p.cle_produit = r.cle_produit
WHERE lower(p.titre_produit) LIKE ('boissons%')
La note moyenne sur l’ensemble des boissons est 8,32.

- 9. Quel est le classement des jours de la semaine où l’expérience client est la meilleure expérience en magasin?
Le samedi
Requête:
select strftime('%w',date_achat) as jour, libelle_categorie, round(avg(note),2) as note_moyenne
from retour_client r
where libelle_categorie = 'expérience en magasin'
group by jour
order by note_moyenne DESC
- 10. Sur quel mois a-t-on le plus de retour sur le service après-vente?
Octobre
Requête:
select strftime('%m',date_achat) as mois, count(libelle_categorie) as         nombre_de_retours_apres_vente 
from retour_client r
where libelle_categorie = 'service après-vente'
group by mois
order by nombre_de_retours_apres_vente DESC

- 11. Quel est le pourcentage de recommandations clients?
90.93%
Requête:
SELECT round(sum(recommandation)*100/count(recommandation),2) as pourcentage_recommandation 
from retour_client
        where recommandation <> ''        
- 12. Quels sont les magasins qui ont une note inférieure à la moyenne?
Le calcul de la moyenne avec SQL:
select round(avg(r.note),2) as note_moyenne, 
from retour_client)
situe la moyenne des notes à 8,05 sur tous les magasins. 
Requête:
select round(avg(r.note),2) as note_moyenne, 
r.ref_magasin, m.libelle_de_commune
from retour_client r
left outer join magasin m on r.ref_magasin = m.ref_magasin
group by r.ref_magasin
HAVING note_moyenne < (SELECT round(avg(r.note),2) from retour_client r)
ORDER BY note_moyenne DESC

- 13. Quelles sont les typologies de produit qui ont amélioré leur moyenne entre le 1er trimestre et le 2e trimestre 2021?
L’Alimentaire et les Loisirs.

Requête:
WITH
moyenne_premier_trimestre as (
SELECT p.typologie_produit as typo_produit,
round(avg(r.note),2) as note_moyenne_1T,
max(r.libelle_categorie)as libelle_categorie,
strftime('%Y',r.date_achat) as annee,
strftime('%m',r.date_achat) as mois
from retour_client r
LEFT OUTER JOIN produit p ON r.cle_produit = p.cle_produit
WHERE annee = '2021'
AND mois IN ('01', '02', '03')
GROUP BY p.typologie_produit
             ),
           moyenne_deuxieme_trimestre as (
           SELECT p.typologie_produit as typo_produit,
          round(avg(r.note),2) as note_moyenne_2T,
          max(r.libelle_categorie)as libelle_categorie,
          strftime('%Y',r.date_achat) as annee,
         strftime('%m',r.date_achat) as mois
         FROM retour_client r
         LEFT OUTER JOIN produit p ON r.cle_produit = p.cle_produit
         WHERE annee = '2021'
          AND mois IN ('04', '05', '06')
         GROUP BY p.typologie_produit)

       SELECT typo_produit, note_moyenne_1T, note_moyenne_2T
      FROM moyenne_deuxieme_trimestre
 INNER JOIN moyenne_premier_trimestre on           moyenne_deuxieme_trimestre.typo_produit =
      moyenne_premier_trimestre.typo_produit
WHERE moyenne_deuxieme_trimestre.note_moyenne_2T >     moyenne_premier_trimestre.note_moyenne_1T
- Requête de calcul du NPS (à partir des données brutes):
Requête:
WITH note_reco as (
SELECT r.libelle_categorie as categorie, count(r.note) as nb_reco
from retour_client r
WHERE note IN ('9','10')
GROUP BY r.libelle_categorie),

note_detracteurs as  (
SELECT r.libelle_categorie as categorie, count(r.note) as nb_detracteurs
from retour_client r
WHERE note IN ('0','1','2','3','4','5','6')
GROUP BY r.libelle_categorie),

total_notes as (SELECT r.libelle_categorie as categorie, count(r.note) as total_notes_categ
from retour_client r
GROUP BY r.libelle_categorie)

SELECT categorie, note_reco.nb_reco*100/total_notes.total_notes_categ-note_detracteurs.nb_detracteurs*100/total_notes.total_notes_categ as NPS
FROM retour_client r, note_reco
INNER JOIN note_detracteurs, total_notes 
on note_reco.categorie = note_detracteurs.categorie
AND note_reco.categorie = total_notes.categorie
GROUP BY note_reco.categorie


2


